/*
messageCreate event, autogenerated by the framework, coded by Vex
*/


function sendHelpMessage(bot, msg, suffix, commands, config) {
    if (msg.channel.guild) {
        bot.createMessage(msg.channel.id, " Alright! Check your PM :thumbsup: ");
    };
    let cmdlen = 0;
    if (!suffix) {
        let tags = {};
        let other = [];
        let msgArray = [];
        let keys = Object.keys(commands);
        for (let key in commands) {
            if (!commands[key].tag || commands[key].tag == undefined) {
                other.push(key);
            } else {
                if (!tags[commands[key].tag]) {
                    tags[commands[key].tag] = [];
                }
                tags[commands[key].tag].push(key)
            }
        }
        let datMsg = "";
        for (let key in tags) {
            datMsg += `**${key}**: ${tags[key].join(", ")}\n`;
        }

        if (other.length !== 0) {
            msgArray.push(datMsg + `**Other: **${other}`);
        } else {
            msgArray.push(datMsg);
        }
        msgArray.push("\n**Tag Info**\n`Basic`: Most basic commands"); /* This is not a generatable string, this is also actually not that necessary, edit/delete this line if needed */
        msgArray.push("\n\n**Want more information on the command?\nTry `>help <command-name>`**");
        bot.getDMChannel(msg.author.id)
            .then(c => {
                c.createMessage(msgArray.join("\n"))
            })
    }
    if (suffix) {
        if (!msg.channel.guild) {
            if (commands[suffix]) {
                bot.createMessage(msg.channel.id, commands[suffix].help);
            } else {
                let found = false;
                for (let key in commands) {
                    if (commands[key].aliases && commands[key].aliases.includes(suffix)) {
                        found = true;
                        bot.createMessage(msg.channel.id, commands[key].help);
                    }
                }
                if (!found) bot.createMessage(msg.channel.id, msg.author.username + ", There is no such\"" + suffix + "\" command!");
            }
        } else {
            bot.createMessage(msg.channel.id, "Please execute this in DM")
        }
    }
}

module.exports = {
    execute(bot, msg, config, commands, logger, plugins) {
        if (!msg.channel.guild) {
            if (/(^https?:\/\/discord\.gg\/[A-Za-z0-9]+$|^https?:\/\/discordapp\.com\/invite\/[A-Za-z0-9]+$)/.test(msg.content)) {
                if (config.clientID && config.clientID !== "") msg.channel.createMessage("**Please use this to invite me to your server: ** https://discordapp.com/oauth2/authorize?client_id=" + config.clientID + "&scope=bot");
            }
        }
        if (msg.author.bot) {
            return;
        }
        if (msg.author.id != bot.user.id && (msg.content.startsWith(config.prefix) || msg.content.indexOf(bot.user.mention) == 0)) {
            let cmdtxt = msg.content.substring(config.prefix.length)
                .split(" ")[0];
            if (config.commandSpaces && config.commandSpaces == true) {
                cmdtxt = msg.content.substring(config.prefix.length)
                    .trim()
                    .split(" ")[0]
            }
            let suffix = msg.content.substring(config.prefix.length + cmdtxt.length + 1)
                .trim();
            if (msg.content.indexOf(bot.user.mention) == 0) {
                if (msg.content.length == bot.user.mention.length) {
                    bot.createMessage(msg.channel.id, "Yeah?");
                } else {
                    if (config.cleverbot == false) return;
                    bot.sendChannelTyping(msg.channel.id);
                    const q = msg.content.substring(msg.content.indexOf(bot.user.mention)).trim();
                    bot.cleverbot.ask(q, (err, response) => {
                        if (err) {
                            msg.channel.createMessage("Uh oh! Cleverbot recieved an error!");
                        } else {
                          msg.channel.createMessage(response);
                        }
                    });
                    logger.logCommand(msg);
                }
            }
            let cmd;
            for (let name in commands) {
                if (name == cmdtxt || (commands[name].aliases && commands[name].aliases.includes(cmdtxt))) {
                    cmd = name;
                }
            }
            if (cmdtxt == "" || cmdtxt == null) return;
            if (commands[cmdtxt]) cmd = cmdtxt;
            if (commands[cmd]) {
                commands[cmd].exec(bot, msg, suffix, plugins, logger);
            }

            if (cmdtxt == "help" || cmdtxt == "halp") {
                sendHelpMessage(bot, msg, suffix, commands, config)
            }
        }
    }
}
